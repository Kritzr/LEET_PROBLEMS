class Solution {
    public int[] smallestRange(List<List<Integer>> nums) {
        PriorityQueue<int[]> minHeap = new PriorityQueue<>((a,b)->a[0]-b[0]);
        int current= Integer.MIN_VALUE;
        int rangestart = 0;
        int endrange = Integer.MAX_VALUE;
        for(int i = 0; i<nums.size(); i++){
            int value = nums.get(i).get(0);
            minHeap.add(new int[]{value, i, 0});
            current = Math.max(current, value);
        }
        while(minHeap.size()==nums.size()){
            int[] currentmin = minHeap.poll();
            int min =  currentmin[0];
            int leastidx = currentmin[1];
            int eleidx  = currentmin[2];

            if(current-min < endrange- rangestart){
                endrange = current;
                rangestart = min;
            }

            if(eleidx +1  < nums.get(leastidx).size()){
                int next = nums.get(leastidx).get(eleidx+1);
                minHeap.add(new int[]{next, leastidx, eleidx+1});
                current = Math.max(current, next);
            }
        }
        return new int[]{rangestart, endrange};

    }
}
